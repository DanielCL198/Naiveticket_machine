Project: naive-ticket-machine
Authors: David Barnes and Michael Kölling

This project is part of the material for the book

   Objects First with Java - A Practical Introduction using BlueJ
   Seventh edition
   David J. Barnes and Michael Kölling
   Pearson Education

It is discussed in chapter 2.

Purpose of project: To illustrate the basics of fields, constructors, and methods.
How to start this project: Create one or more TicketMachine objects.

** Answers **

2.  The balance returned is 0

3. the balanced returned is always zero and the machine doesnt care about how much money you have, it will always print a ticket when it is asked to do so

5. Nothing has changed on the ticket other than the price. 

6. I think it will be more elaborate

7. If we write the opposite, there are many more errors in the code. The message that is given when we click compile does give a helpful hint on on which lines the errors can be found, but does not tell us exactly what was the error in the line of cod3

8.you can leave out the word public, this will lead to no basic coding errors

9. leaving out the word class gives us the same amount of errors as we had in question 7.

10.the one constructor is the public ticket machine, the two feilds are getPrice and getBalance, and the methods are the void InsertMoney and Void PrintTicket

11. It has the same name as the class it is from and it stores values

12. Int, Student, Server

13. alive, tutor, game

14. Student, Server, Person, Game

15. Yes, there are many errors if you put it in any other order that isnt private int price

16. Yes it is obligatory or else there will be an error

17. public int status

18. Student

19. 2 types, String and double

20. Title of books and price of books.

21. public Pet(String petsName)
{
  name=petsName
}


23. the names are different

24.How much money do I have?

25. Changing the name does not give any errors when compiling, this means that the name of an accessor method can be changed as long as the body remains the same

27. It is not a proper stateent

28. their types are different, printTicket is a void, and get price has an int type

29. No they do not, I think this might be because they do not give back information to the user that they can change themselves

31. 
public void increaseScore(int points)
{
   Score=intpoints
}
33. 
public void discount(int amount)
{
amount-=price
}
34. public int age(currentAge)
{
   age=currentAge
}
35. private boolean alive()
{
   boolean=alive
}
36. the price stays at 0 and does not listen to the constrain i gave it previously

37. My cat has green eyes

39. 
#
price
cents

40. # price cents

42. The constraint that is given when making the object allows you to choose their price,
this means that if we choose a different price for each, the output for showPrice
will corresond to what information it was given when it was made, making them both output a different number
